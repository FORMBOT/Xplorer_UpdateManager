####################################################################
# Timelapse
####################################################################

[delayed_gcode _set_customy]
initial_duration: 1
gcode:    
    _SET_TIMELAPSE_SETUP CUSTOM_POS_Y=100

####################################
# Probe IDEX
####################################

[gcode_macro PROBE]
rename_existing: BASE_PROBE
variable_probex: 0.0
variable_probey: 0.0
gcode:        
    {% if printer.toolhead.extruder != "extruder" %}
        {% set current_x = printer.toolhead.position.x %}
        {% set current_y = printer.toolhead.position.y %}
        SET_GCODE_VARIABLE MACRO=PROBE VARIABLE=probex VALUE={current_x|float}
        SET_GCODE_VARIABLE MACRO=PROBE VARIABLE=probey VALUE={current_y|float}
        {% if current_x < 20 or current_x > 340 or current_y < 25 or current_y > 400 %}
            M118 Probe Position outside the probing area!
        {% else %}
            T0
            G1 X{current_x} Y{current_y} F10000
            BASE_PROBE
        {% endif %}
    {% else %}
        {% if printer.toolhead.position.x < 20 or printer.toolhead.position.y < 25 or printer.toolhead.position.y > 400 %}
            M118 Probe Position outside the probing area!
        {% else %}
            BASE_PROBE
        {% endif %}
    {% endif %}

##################################
# Park Tool0 IDEX
##################################

[gcode_macro PARK_extruder]
gcode:
    {% set xplorer = printer['gcode_macro _XPLORER_VARIABLES'] %} 
	SET_DUAL_CARRIAGE CARRIAGE=0
   	{% if not "x" in printer.toolhead.homed_axes %}
	    G28 X
	{% endif %}

    SAVE_GCODE_STATE NAME=park0
    G90
	SET_GCODE_OFFSET X=0
    G1 X0 F{xplorer.sp_tch}
    RESTORE_GCODE_STATE NAME=park0

##################################
# Park Tool1 IDEX
##################################

[gcode_macro PARK_extruder1]
gcode:
    {% set xplorer = printer['gcode_macro _XPLORER_VARIABLES'] %} 
	SET_DUAL_CARRIAGE CARRIAGE=1
   	{% if not "x" in printer.toolhead.homed_axes %}
	    G28 X
	{% endif %}

    SAVE_GCODE_STATE NAME=park1
    G90
	SET_GCODE_OFFSET X=0
    G1 X421 F{xplorer.sp_tch}
    RESTORE_GCODE_STATE NAME=park1

##################################
# Activate Tool0 
##################################

[gcode_macro Tool0]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set xplorer = printer['gcode_macro _XPLORER_VARIABLES'] %}
    G1 F{xplorer.sp_tch}
    {% if printer.toolhead.extruder != "extruder" %}
        PARK_{printer.toolhead.extruder}
    {% endif %}    
    ACTIVATE_EXTRUDER EXTRUDER=extruder
    SET_DUAL_CARRIAGE CARRIAGE=0
    SET_INPUT_SHAPER SHAPER_TYPE_X={svv.shaper_type_xt0} SHAPER_FREQ_X={svv.shaper_freq_xt0} SHAPER_TYPE_Y={svv.shaper_type_yt0} SHAPER_FREQ_Y={svv.shaper_freq_yt0}
    SET_GCODE_OFFSET X=0 Y=0 Z=0

[gcode_macro T0]
gcode:

##################################
# Activate Tool1
##################################

[gcode_macro Tool1]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set xplorer = printer['gcode_macro _XPLORER_VARIABLES'] %}    
    G1 F{xplorer.sp_tch}
	{% if printer.toolhead.extruder != "extruder1" %}
	PARK_{printer.toolhead.extruder}
	{% endif %}
    ACTIVATE_EXTRUDER EXTRUDER=extruder1
    SET_DUAL_CARRIAGE CARRIAGE=1
    SET_INPUT_SHAPER SHAPER_TYPE_X={svv.shaper_type_xt1} SHAPER_FREQ_X={svv.shaper_freq_xt1} SHAPER_TYPE_Y={svv.shaper_type_yt1} SHAPER_FREQ_Y={svv.shaper_freq_yt1}
    SET_GCODE_OFFSET  X={svv.x1offset} Y={svv.y1offset} Z={svv.z1offset}
    
[gcode_macro T1]
gcode:
    
####################################################################
# Copy Mode IDEX
####################################################################

[gcode_macro ACTIVATE_COPY_MODE]
gcode:
    M118 Activating COPY mode 
    {% set svv = printer.save_variables.variables %}
    {% set xplorer = printer['gcode_macro _XPLORER_VARIABLES'] %} 
    SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
    G1 X1 F{xplorer.sp_pmode}
    ACTIVATE_EXTRUDER EXTRUDER=extruder
    SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY    
    G1 X{xplorer.x_cop_idex}
    SET_DUAL_CARRIAGE CARRIAGE=1 MODE=COPY    
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder
    SAVE_VARIABLE VARIABLE=pmode VALUE=1
    SET_INPUT_SHAPER SHAPER_TYPE_X={svv.shaper_type_xidexcp} SHAPER_FREQ_X={svv.shaper_freq_xidexcp} SHAPER_TYPE_Y={svv.shaper_type_yidexcp} SHAPER_FREQ_Y={svv.shaper_freq_yidexcp}

####################################################################
# Mirror Mode IDEX
####################################################################

[gcode_macro ACTIVATE_MIRROR_MODE]
gcode:
    M118 Activating MIRROR mode !
    {% set svv = printer.save_variables.variables %}
    {% set xplorer = printer['gcode_macro _XPLORER_VARIABLES'] %} 
    SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
    G1 X1
    ACTIVATE_EXTRUDER EXTRUDER=extruder
    SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
    G1 X{xplorer.x_mir_idex}
    SET_DUAL_CARRIAGE CARRIAGE=1 MODE=MIRROR    
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder
    SAVE_VARIABLE VARIABLE=pmode VALUE=2
    SET_INPUT_SHAPER SHAPER_TYPE_X={svv.shaper_type_xidexmr} SHAPER_FREQ_X={svv.shaper_freq_xidexmr} SHAPER_TYPE_Y={svv.shaper_type_yidexmr} SHAPER_FREQ_Y={svv.shaper_freq_yidexmr}
    
####################################################################
# Normal Mode IDEX
####################################################################

[gcode_macro ACTIVATE_PRIMARY_MODE]
gcode:
    M118 Activating PRIMARY Printing Mode !
    {% set svv = printer.save_variables.variables %}
    SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder1  
    SAVE_VARIABLE VARIABLE=pmode VALUE=0
    PARK_extruder1
    T0

####################################################################
# Set Normal Mode at startup
####################################################################

[delayed_gcode Primary_Mode_startup]
initial_duration: 1
gcode:    
    SAVE_VARIABLE VARIABLE=pmode VALUE=0
    SKEW_PROFILE LOAD=SKEW0

####################################################################
# Query wich printing mode is active
####################################################################

[gcode_macro QUERY_PRINTING_MODE]
gcode:
    {% set svv = printer.save_variables.variables %}
    {%if svv.pmode == 0%}
     M118 PRIMARY Printing Mode is activated for the next print!
    {%endif%}
    {%if svv.pmode == 1%}
     M118 COPY Printing Mode is activated for the next print!
   {%endif%}
    {%if svv.pmode == 2%}
     M118 MIRROR Printing Mode is activated for the next print!
   {%endif%}

####################################################################
# Start print mode
####################################################################

[gcode_macro START_PRINTING_MODE]
gcode:
    {% set svv = printer.save_variables.variables %}
    {%if svv.pmode == 0%}
     M118 PRIMARY Printing Mode is active
     #ACTIVATE_PRIMARY_MODE
    {%endif%}
    {%if svv.pmode == 1%}
     ACTIVATE_COPY_MODE
   {%endif%}
    {%if svv.pmode == 2%}
     ACTIVATE_MIRROR_MODE
   {%endif%}
   
####################################################################
# SET print mode
####################################################################

[gcode_macro SET_PRINT_MODE]
description: Set the printing mode (PRIMARY, COPY, MIRROR)

gcode:
    {% set mode = params.MODE|default("PRIMARY;COPY;MIRROR") %}
    {% set svv = printer.save_variables.variables %}
    {% if mode == "PRIMARY" %}
    SAVE_VARIABLE VARIABLE=pmode VALUE=0
    M117 Print Mode: PRIMARY
    {% elif mode == "COPY" %}
    SAVE_VARIABLE VARIABLE=pmode VALUE=1
    M117 Print Mode: COPY
    {% elif mode == "MIRROR" %}
    SAVE_VARIABLE VARIABLE=pmode VALUE=2
    M117 Print Mode: MIRROR
    {% else %}
    M118 Invalid Print Mode! Available printing modes are: PRIMARY (default), COPY, and MIRROR.
    {% endif %}


#######################################
# START_PRINT
#######################################

[gcode_macro START_PRINT]
gcode: 
      M118 Start printing...
      printstart_audio
      G28 X 
      CHECK_HOME                                               # Home the printer 
      G90      
      Z_TILT_ADJUST
      G92 E0                                        # Reset extruder       
      BED_MESH_PROFILE LOAD=default
     # Move to wait position 
      G28 X 
      G90
      G1 Y405 Z50 F8000
      SET_VELOCITY_LIMIT VELOCITY=500 ACCEL=20000

#######################################
# END_PRINT IDEX
#######################################

[gcode_macro END_PRINT]
gcode:
    SET_SKEW CLEAR=1
    M104 T0 S0                                #extruder heater off
    M104 T1 S0                                #extruder heater off
    M140 S0                                   #heated bed heater off 
    SET_FAN_SPEED FAN=Tool_0_partfan Speed=0.0
    SET_FAN_SPEED FAN=Tool_1_partfan Speed=0.0
    G91                                       #relative positioning
    G1 E-3 F300                               #retract the filament a bit before lifting the nozzle, to release some of the pressure
    M117 RETRACT
    G1 Z+0.5 E-3 F9000              #move Z up a bit and retract filament even more
    G1 E-10
    M117 WIPE OUT
    G90
    {% set axismax = printer.toolhead.axis_maximum %}
	{% set pos     = printer.toolhead.position     %}
	
	#Move toolhead away from finished print
	{% if pos.z <= ( axismax.z - 10 ) %}
		G1 Z{ pos.z + 5}
        G28 X;
        G1 Y{axismax.y - 10} F5000
    {% else %}
		G28 X;
        G1 Y{axismax.y - 10} F5000 
    {% endif %}
        M117 PRESENT ITEM
     BED_MESH_CLEAR
    G28 Z
    SET_DUAL_CARRIAGE CARRIAGE=0               #activate T0
    G1 X11 F5000
    SET_DUAL_CARRIAGE CARRIAGE=1               #activate T1
    G1 X418 F5000
    ACTIVATE_PRIMARY_MODE
    SET_VELOCITY_LIMIT VELOCITY=300 ACCEL=5000
    SKEW_PROFILE LOAD=SKEW0
    printend_audio

########################################
# Part cooling Fan IDEX
########################################

[gcode_macro M106]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% if params.S is defined %}
        {% set realspeed = params.S|int / 255 %}
        {% if printer.toolhead.extruder == "extruder" %}
            SET_FAN_SPEED FAN=Tool_0_partfan Speed={realspeed}
            {% if svv.pmode in [1, 2] %}
                SET_FAN_SPEED FAN=Tool_1_partfan Speed={realspeed}
            {% endif %}
        {% elif printer.toolhead.extruder == "extruder1" %}
            SET_FAN_SPEED FAN=Tool_1_partfan Speed={realspeed}
        {% else %}
            # Default behavior if no specific extruder is active
            SET_FAN_SPEED FAN=Tool_0_partfan Speed={realspeed}
            SET_FAN_SPEED FAN=Tool_1_partfan Speed={realspeed}
        {% endif %}
    {% else %}
        # Default to full speed if no S parameter is provided
        {% if printer.toolhead.extruder == "extruder" %}
            SET_FAN_SPEED FAN=Tool_0_partfan Speed=1.0
            {% if pmode in [1, 2] %}
                SET_FAN_SPEED FAN=Tool_1_partfan Speed=1.0
            {% endif %}
        {% elif printer.toolhead.extruder == "extruder1" %}
            SET_FAN_SPEED FAN=Tool_1_partfan Speed=1.0
        {% else %}
            SET_FAN_SPEED FAN=Tool_0_partfan Speed=1.0
            SET_FAN_SPEED FAN=Tool_1_partfan Speed=1.0
        {% endif %}
    {% endif %}

########################################
# Brush_T0 IDEX
########################################
[gcode_macro Brush_Tool0]
gcode:
     {% set svv = printer.save_variables.variables %}
     M118 Brushing Tool0
     G90
     Tool0
     G1 Z10
   
; Set initial position
    G0 X94 Y405 Z{svv.h_brush} F9000        ; Move to the starting point at X94 Y405 Z1.5

; Clockwise Spiral - Movement Loop
    G1 F15000               ; Set feedrate to 12000 mm/min

   G1 X97 Y405
   G1 X100 Y408
   G1 X103 Y409
   G1 X106 Y406
   G1 X109 Y403
   G1 X112 Y401
   G1 X115 Y402
   G1 X118 Y405
   G1 X121 Y408
   G1 X124 Y409
   G1 X127 Y406
   G1 X129 Y403

   G1 X127 Y406
   G1 X124 Y409
   G1 X121 Y408
   G1 X118 Y405
   G1 X115 Y402
   G1 X112 Y401
   G1 X109 Y403
   G1 X106 Y406
   G1 X103 Y409
   G1 X100 Y408
   G1 X97 Y405
   G1 X94 Y405

   G1 X97 Y405
   G1 X100 Y408
   G1 X103 Y409
   G1 X106 Y406
   G1 X109 Y403
   G1 X112 Y401
   G1 X115 Y402
   G1 X118 Y405
   G1 X121 Y408
   G1 X124 Y409
   G1 X127 Y406
   G1 X129 Y403

   G1 X127 Y406
   G1 X124 Y409
   G1 X121 Y408
   G1 X118 Y405
   G1 X115 Y402
   G1 X112 Y401
   G1 X109 Y403
   G1 X106 Y406
   G1 X103 Y409
   G1 X100 Y408
   G1 X97 Y405
   G1 X94 Y405

   G1 X97 Y405
   G1 X100 Y408
   G1 X103 Y409
   G1 X106 Y406
   G1 X109 Y403
   G1 X112 Y401
   G1 X115 Y402
   G1 X118 Y405
   G1 X121 Y408
   G1 X124 Y409
   G1 X127 Y406
   G1 X129 Y403

   G1 X127 Y406
   G1 X124 Y409
   G1 X121 Y408
   G1 X118 Y405
   G1 X115 Y402
   G1 X112 Y401
   G1 X109 Y403
   G1 X106 Y406
   G1 X103 Y409
   G1 X100 Y408
   G1 X97 Y405
   G1 X94 Y405   


   G0 Z10                  ; Lift up to avoid collisions
########################################
# Brush_T1 IDEX
########################################
[gcode_macro Brush_Tool1]
gcode:
     {% set svv = printer.save_variables.variables %}
     M118 Brushing Tool1
     G90
     G1 Z10 F2000
     Tool1
     
; Set initial position
    G0 X294 Y405 Z{svv.h_brush} F9000        ; Move to the starting point at X94 Y405 Z1.5

; Clockwise Spiral - Movement Loop
    G1 F15000               ; Set feedrate to 12000 mm/min

   G1 X297 Y405
   G1 X300 Y408
   G1 X303 Y409
   G1 X306 Y406
   G1 X309 Y403
   G1 X312 Y401
   G1 X315 Y402
   G1 X318 Y405
   G1 X321 Y408
   G1 X324 Y409
   G1 X327 Y406
   G1 X329 Y403

   G1 X327 Y406
   G1 X324 Y409
   G1 X321 Y408
   G1 X318 Y405
   G1 X315 Y402
   G1 X312 Y401
   G1 X309 Y403
   G1 X306 Y406
   G1 X303 Y409
   G1 X300 Y408
   G1 X297 Y405
   G1 X294 Y405

   G1 X297 Y405
   G1 X300 Y408
   G1 X303 Y409
   G1 X306 Y406
   G1 X309 Y403
   G1 X312 Y401
   G1 X315 Y402
   G1 X318 Y405
   G1 X321 Y408
   G1 X324 Y409
   G1 X327 Y406
   G1 X329 Y403

   G1 X327 Y406
   G1 X324 Y409
   G1 X321 Y408
   G1 X318 Y405
   G1 X315 Y402
   G1 X312 Y401
   G1 X309 Y403
   G1 X306 Y406
   G1 X303 Y409
   G1 X300 Y408
   G1 X297 Y405
   G1 X294 Y405
 
   G1 X297 Y405
   G1 X300 Y408
   G1 X303 Y409
   G1 X306 Y406
   G1 X309 Y403
   G1 X312 Y401
   G1 X315 Y402
   G1 X318 Y405
   G1 X321 Y408
   G1 X324 Y409
   G1 X327 Y406
   G1 X329 Y403
 
   G1 X327 Y406
   G1 X324 Y409
   G1 X321 Y408
   G1 X318 Y405
   G1 X315 Y402
   G1 X312 Y401
   G1 X309 Y403
   G1 X306 Y406
   G1 X303 Y409
   G1 X300 Y408
   G1 X297 Y405
   G1 X294 Y405  


   G0 Z10                  ; Lift up to avoid collisions
          
######################################################################
# Filament Change M600 IDEX
######################################################################
# After filament has # been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[gcode_macro M600]
gcode:
    {% set z = params.Z|default(10)|int %}                                                   # z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              # set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    # set hotend temp variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=e1temp VALUE={printer['extruder1'].target}
        SAVE_GCODE_STATE NAME=PAUSE                                                          # save current print position for resume
        BASE_PAUSE                                                                           # pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       # check that zhop doesn't exceed z max
            G91                                                                              # relative positioning
            G1 Z{z} F900                                                                     # raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  # if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  # absolute positioning    
        G1  X117.5 Y{printer.toolhead.axis_minimum.y+5} F6000                                # move gantry to the front
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      # save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       # set timeout to 12 hours
    {% endif %}
    printpause_audio        
                
######################################################################
# Pause IDEX
######################################################################

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    M118 Pause print...
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                             # z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                                        # set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}              # set hotend temp variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=e1temp VALUE={printer['extruder1'].target}
        SAVE_GCODE_STATE NAME=PAUSE                                                                    # save current print position for resume
        BASE_PAUSE                                                                                     # pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}                 # check that zhop doesn't exceed z max
            G91                                                                                        # relative positioning
            G1 Z{z} F900                                                                               # raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                            # if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                            # absolute positioning    
        G1 X117.5 Y{printer.toolhead.axis_maximum.y-3} F6000                                           # move gantry to the back
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                                # save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        	{% if printer.toolhead.extruder != "extruder1" %}
	    M104 T0 S150
    {% else %}
        M104 T1 S150
	{% endif %}
        #M104 S0                                                                                       # turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=3600                                                                  # set timeout to 12 hours
    {% endif %}
    printpause_audio
    
########################################################################################
# Cancel IDEX
########################################################################################

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    M118 CANCEL PRINT !
    SET_SKEW CLEAR=1
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}                                            # set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    M104 T0 S0                                                                                                             #extruder heater off
    M104 T1 S0                                                                                                             #extruder1 heater off
    M140 S0                                                                                                                #heated bed heater off     
    SET_FAN_SPEED FAN=Tool_0_partfan Speed=0.0
    SET_FAN_SPEED FAN=Tool_1_partfan Speed=0.0
    G91                                                                                                                    #relative positioning
    G1 E-3 F300                                                                                                            #retract the filament a bit before lifting the nozzle, to release some of the pressure
    M117 RETRACT
    G1 Z+0.5 E-3  F9000                                                                                           #move Z up a bit and retract filament even more
    G1 E-10
    M117 WIPE OUT
    G90
    {% set axismax = printer.toolhead.axis_maximum %}
	{% set pos     = printer.toolhead.position     %}
	
	#Move toolhead away from finished print
	{% if pos.z <= ( axismax.z - 10 ) %}
		G1 Z{ pos.z + 5 }
        G28 X;
        G1 Y{axismax.y - 10} F5000
    {% else %}
		G28 X;
        G1 Y{axismax.y - 10} F5000  
    {% endif %}
    BED_MESH_CLEAR
    G28 Z
    SET_DUAL_CARRIAGE CARRIAGE=0               #activate T0
    G1 X11 F5000
    SET_DUAL_CARRIAGE CARRIAGE=1               #activate T1
    G1 X418 F5000
    ACTIVATE_PRIMARY_MODE
    SET_VELOCITY_LIMIT VELOCITY=300 ACCEL=500
    SKEW_PROFILE LOAD=SKEW0
    BASE_CANCEL_PRINT
    printcancel_audio

#########################################
# Resonance Calibration IDEX
########################################

[gcode_macro RESONANCE_CALIBRATION_IDEX_Mirror]
gcode:
    {% set xplorer = printer['gcode_macro _XPLORER_VARIABLES'] %}
    M118 This will measure the resonaces on X and Y-Axis for Tool0.
    M118 The process may take a few minutes, so be patient.
    CHECK_HOME
    #G28
    ACTIVATE_MIRROR_MODE    
    G1 Z{xplorer.res_z} F2000
    TEST_RESONANCES AXIS=X POINT={xplorer.res_xmicp},{xplorer.res_ymicp2e},{xplorer.res_z} ACCELEROMETER=Tool0
    RUN_SHELL_COMMAND CMD=resonaces_x_idexmr
    TEST_RESONANCES AXIS=Y POINT={xplorer.res_xmicp},{xplorer.res_ymicp2e},{xplorer.res_z} ACCELEROMETER=Tool0
    RUN_SHELL_COMMAND CMD=resonaces_y_idexmr
    SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder1
    M118 Resonace test is complete. Check the PNG files for details
     
[gcode_macro RESONANCE_CALIBRATION_IDEX_Copy]
gcode:
    {% set xplorer = printer['gcode_macro _XPLORER_VARIABLES'] %}
    M118 This will measure the resonaces on X and Y-Axis for Tool0.
    M118 The process may take a few minutes, so be patient.
    CHECK_HOME
    #G28
    ACTIVATE_COPY_MODE  
    G1 Z{xplorer.res_z} F2000
    TEST_RESONANCES AXIS=X POINT={xplorer.res_xmicp},{xplorer.res_ymicp2e},{xplorer.res_z} ACCELEROMETER=Tool0
    RUN_SHELL_COMMAND CMD=resonaces_x_idexcp
    TEST_RESONANCES AXIS=Y POINT={xplorer.res_xmicp},{xplorer.res_ymicp2e},{xplorer.res_z} ACCELEROMETER=Tool0
    RUN_SHELL_COMMAND CMD=resonaces_y_idexcp
    SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder1
    M118 Resonace test is complete. Check the PNG files for details
    
[gcode_macro RESONANCE_CALIBRATION_IDEX]
gcode:
     RESONANCE_CALIBRATION_IDEX_Copy
     RESONANCE_CALIBRATION_IDEX_Mirror
     M118 Resonace tests for IDEX printing modes are complete.  

#########################################
# Printer Auto Calibrate IDEX
########################################

[gcode_macro Printer_Calibrate]
gcode:       
    printstart_audio
    {% set xplorer = printer['gcode_macro _XPLORER_VARIABLES'] %}
    {% set svv = printer["save_variables"].variables %}
    M118 Starting printer calibration...
    M118 The calibration process takes up to 45 minutes ! Be patient !!! You can grab a coffe :)
    M104 T0 S{svv.tprobe}
    M104 T1 S{svv.tprobe}
    M140 S{svv.mesh_tmp}    
    M118 Calibration Bed Probe offset
    AUTO_CALIBRATE_probe_offset
    M118 Calibration Tools offsets
    AUTO_CALIBRATE_tool_offsets
    T0
    G1 X210 Y200 F10000
    G1 Z100 F2000
    M118 PID Calibration for Tool0
    PID_Tool0
    M104 T1 S{svv.tprobe}
    T1
    G1 X210 Y200 F10000
    M118 PID Calibration for Tool1
    PID_Tool1
    M104 T1 S{svv.tprobe}
    PARK_extruder1
    M118 PID Calibration for Print Bed
    PID_BED
    M118 Mesh leveling
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={svv.tprobe}
    Brush_Tool0
    T0    
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={svv.mesh_tmp}
    Z_TILT_ADJUST
    BED_MESH_CALIBRATE PROFILE=default METHOD=automatic # Start probing
    M104 T0 S0
    M104 T1 S0
    M118 Resonance Calibration
    RESONACE_CALIBRATION_Tool0
    RESONACE_CALIBRATION_Tool1
    RESONANCE_CALIBRATION_IDEX
    G28
    printend_audio
    SAVE_CONFIG
